// Nome:Lucas Bruck; RA:2612259

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CadAgend extends javax.swing.JFrame {
    
    private Agendamento ag1 = new Agendamento();
    private GerAgend gerAg = GerAgend.geraAgend();//Reflexividade
    
    private Cliente cli1 = new Cliente();
    private GerCli gerCli = GerCli.geraCli();//Reflexividade
    
    private Atendente atend1 = new Atendente();
    private GerAtend gerAtend = GerAtend.geraAtend();//Reflexividade
    
    private static CadAgend geAgenUnic;
    
    private CadAgend() {
        initComponents();
    }
    
    //MÃ‰TODO SINGLETON
    public static CadAgend gerCadAgend(){
        if(geAgenUnic == null){
            geAgenUnic = new CadAgend();
        }
        
        return geAgenUnic;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbData = new javax.swing.JLabel();
        lbDescricao = new javax.swing.JLabel();
        lbPreco = new javax.swing.JLabel();
        lbCpfCli = new javax.swing.JLabel();
        lbCodAtend = new javax.swing.JLabel();
        cxData = new javax.swing.JTextField();
        cxDescricao = new javax.swing.JTextField();
        cxPreco = new javax.swing.JTextField();
        cxCpfCli = new javax.swing.JTextField();
        cxCodAtend = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAgenda = new javax.swing.JTable();
        btConsultCpf = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btAtualzTab = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lbData.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbData.setText("Data do agendamento:");

        lbDescricao.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbDescricao.setText("Descricao Agendamento:");

        lbPreco.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbPreco.setText("Preco");

        lbCpfCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbCpfCli.setText("CPF do cliente");

        lbCodAtend.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbCodAtend.setText("Codigo do atendente");

        cxData.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cxData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxDataActionPerformed(evt);
            }
        });

        cxDescricao.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cxPreco.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        cxCpfCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cxCpfCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxCpfCliActionPerformed(evt);
            }
        });

        cxCodAtend.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btAdicionar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        tbAgenda.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tbAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo Atendimento", "Data", "Cpf Cliente", "Codigo Atendente", "Preco", "Descricao"
            }
        ));
        tbAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAgenda);

        btConsultCpf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btConsultCpf.setText("Consulta CPF");
        btConsultCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultCpfActionPerformed(evt);
            }
        });

        btEditar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btLimpar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btSair.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btAtualzTab.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btAtualzTab.setText("Atualizar Tabela");
        btAtualzTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualzTabActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Cadastro de agendamento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel1)
                .addGap(0, 227, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btAtualzTab)
                .addGap(38, 38, 38)
                .addComponent(btSair)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btAdicionar)
                        .addGap(87, 87, 87)
                        .addComponent(btConsultCpf)
                        .addGap(83, 83, 83)
                        .addComponent(btEditar)
                        .addGap(47, 47, 47)
                        .addComponent(btLimpar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(17, 17, 17)
                                    .addComponent(lbData))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(lbPreco)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cxPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cxData, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(51, 51, 51)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbCodAtend)
                                .addComponent(lbCpfCli))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cxCodAtend, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cxCpfCli, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(lbDescricao)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cxDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbData)
                    .addComponent(cxData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCodAtend)
                    .addComponent(cxCodAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPreco)
                    .addComponent(cxPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCpfCli)
                    .addComponent(cxCpfCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDescricao)
                    .addComponent(cxDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEditar)
                    .addComponent(btLimpar)
                    .addComponent(btConsultCpf)
                    .addComponent(btAdicionar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAtualzTab)
                    .addComponent(btSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxDataActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        //concertar erro de nao preecher todos as caixas
        inseAgend();
        
        listTab();
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btConsultCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultCpfActionPerformed
        pesquisar();
    }//GEN-LAST:event_btConsultCpfActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
        
    }//GEN-LAST:event_btSairActionPerformed

    private void tbAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAgendaMouseClicked
        selectTab();
    }//GEN-LAST:event_tbAgendaMouseClicked

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        editarAgend();
        listTab();
    }//GEN-LAST:event_btEditarActionPerformed

    private void btAtualzTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualzTabActionPerformed
        listTab();
    }//GEN-LAST:event_btAtualzTabActionPerformed

    private void cxCpfCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxCpfCliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxCpfCliActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated
    public void editarAgend(){        
        int posLin = tbAgenda.getSelectedRow();//Reflexividade
        
        if(posLin != -1){
            ag1.setCodAgendamento(Integer.parseInt(tbAgenda.getModel().getValueAt(posLin, 0).toString()));
            ag1 = gerAg.consAgend(ag1);//Reflexividade
            try{
                //colocar erro caso nÃ£o mude nada
                
                ag1.setData(cxData.getText());
                ag1.getAtendente().setCodAtendente(Integer.parseInt(cxCodAtend.getText()));//Reflexividade
                ag1.setPreco(Float.parseFloat(cxPreco.getText()));//Reflexividade
                ag1.getCliente().setCpf(Integer.parseInt(cxCpfCli.getText()));//Reflexividade
                ag1.setDescricao(cxDescricao.getText());//Reflexividade
                
                
                cli1 = gerCli.consCliente(ag1.getCliente());//Reflexividade
                atend1 = gerAtend.consAtendente(ag1.getAtendente());//Reflexividade

                if (cli1 == null ){
                    throw new ClienteNaoCadasException();
                }
                if (atend1 == null){
                    throw new AtendNaoCadasException();
                }
                ag1 = gerAg.atualizaAgendCodAgend(ag1);//Reflexividade
                gerCli.atualzGast(gerAg.getBdAgend());//Reflexividade
                gerAtend.atualzComis(gerAg.getBdAgend());//Reflexividade
                if(ag1 != null){
                    FormPrincipal.telaErroInfo("Agendamento Atualizado com sucesso!", "Agendamento Atualizado");
                }
            }
            catch(PrecoInvalidoException pie){
            }
            catch(ClienteNaoCadasException cnce){
            FormPrincipal.telaErroAcao("Cliente nao cadastrado\nDeseja Cdastra-lo?",
                        "Cliente nÃ£o encontrado", 
                        () -> CadCliente.gerCadCli().setVisible(true), null);//Reflexividade
            }
            catch(AtendNaoCadasException ance){
                FormPrincipal.telaErroAcao("Atendente nÃ£o cadastrado\nDeseja cadastra-lo?", 
                        "Atendente nao cadastrado", 
                        () -> CadAtend.gerCadAtend().setVisible(true),
                        this::dispose);//Reflexividade
            }
        }
        else{
            FormPrincipal.telaErroInfo("Nenhum agendamento da tabela selecionado\nPara editar um agendamento, selecione ele na tabela ",
                    "Editar agendamento");//Reflexividade
        }
    }
    public void selectTab(){        
        int posLin = tbAgenda.getSelectedRow();//Reflexividade
        int resp =  JOptionPane.showConfirmDialog(
                null,
                "Agendamento de codigo:"+tbAgenda.getModel().getValueAt(posLin, 0).toString()+
                        "Selecionado\nDeseja colocar os dados nas caixas?",
                "Editar Agendamento",
                JOptionPane.YES_NO_OPTION
        );//Reflexividade
       if(resp == 0){
      
            cxData.setText(tbAgenda.getModel().getValueAt(posLin, 1).toString());//Reflexividade
            cxCpfCli.setText(tbAgenda.getModel().getValueAt(posLin, 2).toString());//Reflexividade
            cxCodAtend.setText(tbAgenda.getModel().getValueAt(posLin, 3).toString());//Reflexividade
            cxPreco.setText(tbAgenda.getModel().getValueAt(posLin, 4).toString());//Reflexividade
            cxDescricao.setText(tbAgenda.getModel().getValueAt(posLin, 5).toString());//Reflexividade
            FormPrincipal.telaErroInfo("InformaÃ§oes colocada na caixa\nPara editar, clique no botao editar", "Editar info");//Reflexividade
       }
        
    }
    public void sair(){
       
        FormPrincipal.telaErroAcao("Deseja realmente sair?", "Saida", this::dispose, 
                () -> FormPrincipal.telaErroAcao("Deseja apagar os dados?", "Dados", this::limpar, null));//Reflexividade
        
       
    }
    public void pesquisar(){
        ag1 = new Agendamento();
        try{
            ag1.getCliente().setCpf(Integer.parseInt(cxCpfCli.getText()));//Reflexividade
            
            ag1 = gerAg.consCpdfAgend(ag1);//Reflexividade
            
            if(ag1 != null){
                JOptionPane.showMessageDialog(
                        null,
                        "Agendamento encontrada com sucesso!\nConfira a tabela",
                        "Consulta de Agendamento",
                        JOptionPane.INFORMATION_MESSAGE
                        
                );
                
                DefaultTableModel modTab = (DefaultTableModel)tbAgenda.getModel(); //Reflexividade
                int posLin = 0;
                modTab.setRowCount(posLin);//Reflexividade

                for(Agendamento ag : gerAg.getBdAgend()){
                    if (ag.getCliente().getCpf() == ag1.getCliente().getCpf()){
                        modTab.insertRow(posLin, new Object[]{ag.getCodAgendamento(),
                        ag.getData(),
                        ag.getCliente().getCpf(),
                        ag.getAtendente().getCodAtendente(),
                        ag.getPreco(),
                        ag.getDescricao()
                        });//Reflexividade
                        posLin++;
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(
                        null,
                        "CPF nÃ£o encontrado!",
                        "Consulta de Agendamento",
                        JOptionPane.QUESTION_MESSAGE
                );//Reflexividade
                cxCpfCli.setText("");//Reflexividade
                cxCpfCli.requestFocus();//Reflexividade
            }
            
        }
        //colocar catch melhores
        catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(
                    null,
                    "O CPF deve ser um nÃºmero inteiro!",
                    "Consulta de Pessoa",
                    JOptionPane.ERROR_MESSAGE
            );
            cxCpfCli.setText("");//Reflexividade
            cxCpfCli.requestFocus();//Reflexividade
        }
        

    }
    public void limpar(){
        cxData.setText("");//Reflexividade
        cxCodAtend.setText("");//Reflexividade
        cxPreco.setText("");//Reflexividade
        cxCpfCli.setText("");//Reflexividade
        cxDescricao.setText("");//Reflexividade
        cxData.requestFocus();//Reflexividade
    }
    public void inseAgend(){
        ag1 = new Agendamento();
        cli1 = new Cliente();
        atend1 = new Atendente();
        
        try{

            ag1.setData(cxData.getText());//Reflexividade
            ag1.getAtendente().setCodAtendente(Integer.parseInt(cxCodAtend.getText()));//Reflexividade
            ag1.setPreco(Float.parseFloat(cxPreco.getText()));//Reflexividade
            ag1.getCliente().setCpf(Integer.parseInt(cxCpfCli.getText()));//Reflexividade
            ag1.setDescricao(cxDescricao.getText());//Reflexividade
            
            cli1 = gerCli.consCliente(ag1.getCliente());//Reflexividade
            atend1 = gerAtend.consAtendente(ag1.getAtendente());//Reflexividade
            
            if (cli1 == null ){
                throw new ClienteNaoCadasException();
            }
            if (atend1 == null){
                throw new AtendNaoCadasException();
            }
            
            ag1.setCliente(cli1);//Reflexividade
            ag1.setAtendente(atend1);//Reflexividade
            ag1 = gerAg.insAgend(ag1);//Reflexividade
            gerCli.atualzGast(gerAg.getBdAgend());//Reflexividade
            gerAtend.atualzComis(gerAg.getBdAgend());//Reflexividade
            
            if(ag1 != null){
                FormPrincipal.telaErroInfo("Agendamento cadastrada com sucesso!", 
                        "Cadastro de Agendamento");//Reflexividade
                limpar();
            }
        }
        catch(PrecoInvalidoException pie){
            pie.impPrecoInvalido();//Reflexividade
            cxCpfCli.setText("");//Reflexividade
            cxCpfCli.requestFocus();//Reflexividade
        }
        catch(NumberFormatException nfe){
            FormPrincipal.telaErroInfo("O Cpf, codigo do atendente, preco e", "Consulta de Atendente");//Reflexividade
        }
        catch(ClienteNaoCadasException cnce){
            FormPrincipal.telaErroAcao("Cliente nao cadastrado\nDeseja Cdastra-lo?",
                        "Cliente nÃ£o encontrado", 
                        () -> CadCliente.gerCadCli().setVisible(true), null);//Reflexividade
        }
        catch(AtendNaoCadasException ance){
            FormPrincipal.telaErroAcao("Atendente nÃ£o cadastrado\nDeseja cadastra-lo?", 
                    "Atendente nao cadastrado", 
                    () -> CadAtend.gerCadAtend().setVisible(true),
                    this::dispose);//Reflexividade
        }
    }
    public void listTab(){
            DefaultTableModel modTab = (DefaultTableModel)tbAgenda.getModel(); //Reflexividade
            int posLin = 0;
            modTab.setRowCount(posLin);//Reflexividade

            for(Agendamento ag : gerAg.getBdAgend()){
                modTab.insertRow(posLin, new Object[]{ag.getCodAgendamento(),
                    ag.getData(),
                    ag.getCliente().getCpf(),
                    ag.getAtendente().getCodAtendente(),
                    ag.getPreco(),
                    ag.getDescricao()
                });//Reflexividade
                posLin++;
            }
        }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadAgend().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAtualzTab;
    private javax.swing.JButton btConsultCpf;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JTextField cxCodAtend;
    private javax.swing.JTextField cxCpfCli;
    private javax.swing.JTextField cxData;
    private javax.swing.JTextField cxDescricao;
    private javax.swing.JTextField cxPreco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCodAtend;
    private javax.swing.JLabel lbCpfCli;
    private javax.swing.JLabel lbData;
    private javax.swing.JLabel lbDescricao;
    private javax.swing.JLabel lbPreco;
    private javax.swing.JTable tbAgenda;
    // End of variables declaration//GEN-END:variables
}
