 // Nome:Lucas Bruck; RA:2612259

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author lucas
 */
public class CadCliente extends javax.swing.JFrame {
    
    private Cliente cli1 = new Cliente();
    private GerCli geCli = GerCli.geraCli();//Reflexividade
    
    private static CadCliente gerCadCliUnic;
    
    //MÃ‰TODO SINGLETON
    public static CadCliente gerCadCli(){
        if (gerCadCliUnic == null ){
            gerCadCliUnic = new CadCliente();
        }
        return gerCadCliUnic;
    }
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CadCliente.class.getName());

    /**
     * Creates new form CadCliente
     */
    public CadCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbCadCli = new javax.swing.JLabel();
        lbNomeCli = new javax.swing.JLabel();
        cxNomCli = new javax.swing.JTextField();
        lbCpfCli = new javax.swing.JLabel();
        cxCpfCli = new javax.swing.JTextField();
        lbTelefone = new javax.swing.JLabel();
        cxTelefone = new javax.swing.JTextField();
        btCadastrar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCadCli = new javax.swing.JTable();
        btCpf = new javax.swing.JButton();
        btAtualizTab = new javax.swing.JButton();
        btPesquisarCpf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lbCadCli.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbCadCli.setText("Cadastro de Cliente");

        lbNomeCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbNomeCli.setText("Nome");

        cxNomCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lbCpfCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbCpfCli.setText("Cpf ");

        cxCpfCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lbTelefone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbTelefone.setText("Telefone");

        cxTelefone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cxTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxTelefoneActionPerformed(evt);
            }
        });

        btCadastrar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btCadastrar.setText("Cadastrar");
        btCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        tbCadCli.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tbCadCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Cpf", "Telefone"
            }
        ));
        tbCadCli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCadCliMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCadCli);

        btCpf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btCpf.setText("Editar");
        btCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCpfActionPerformed(evt);
            }
        });

        btAtualizTab.setText("Atualizar Tabela");
        btAtualizTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizTabActionPerformed(evt);
            }
        });

        btPesquisarCpf.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btPesquisarCpf.setText("Pesquisar Cpf");
        btPesquisarCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarCpfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btAtualizTab)
                        .addGap(18, 18, 18)
                        .addComponent(btLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(btSair))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lbNomeCli)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(btCadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(btPesquisarCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btCpf)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTelefone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cxNomCli, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbCpfCli)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cxCpfCli, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cxTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(lbCadCli)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lbCadCli)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNomeCli)
                    .addComponent(cxNomCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbCpfCli)
                    .addComponent(cxCpfCli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cxTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTelefone))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPesquisarCpf)
                    .addComponent(btCadastrar)
                    .addComponent(btCpf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btSair)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btLimpar)
                        .addComponent(btAtualizTab)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxTelefoneActionPerformed

    private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
        inseCliente();
        listTab();
    }//GEN-LAST:event_btCadastrarActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limpar();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sair();
    }//GEN-LAST:event_btSairActionPerformed

    private void tbCadCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCadCliMouseClicked
        selectTab();
    }//GEN-LAST:event_tbCadCliMouseClicked

    private void btCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCpfActionPerformed
        editarCliente();
        listTab();
    }//GEN-LAST:event_btCpfActionPerformed

    private void btAtualizTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizTabActionPerformed
        listTab();
    }//GEN-LAST:event_btAtualizTabActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    }//GEN-LAST:event_formWindowActivated

    private void btPesquisarCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarCpfActionPerformed
    pesquisar();
    }//GEN-LAST:event_btPesquisarCpfActionPerformed
    public void pesquisar(){
        cli1 = new Cliente();
        try{
            cli1.setCpf(Integer.parseInt(cxCpfCli.getText()));
            
            cli1 = geCli.consCliente(cli1);//Reflexividade
            
            if(cli1 != null){
                JOptionPane.showMessageDialog(
                        null,
                        "Atendente encontrado com sucesso!\nConfira a tabela",
                        "Consulta de Atendente",
                        JOptionPane.INFORMATION_MESSAGE
                        
                );
                
                DefaultTableModel modTab = (DefaultTableModel)tbCadCli.getModel(); //Reflexividade
                int posLin = 0;
                modTab.setRowCount(posLin);//Reflexividade

                for(Cliente cli : geCli.getBdCli()){
                    if (cli1.getCpf() == cli.getCpf()){
                        modTab.insertRow(posLin, new Object[]{cli.getNome(),
                            cli.getCpf(), cli.getTelefone()
                        });//Reflexividade
                        posLin++;
                    }
                }
                
                
            }
            else{
                JOptionPane.showMessageDialog(
                        null,
                        "Cpf nÃ£o encontrado!",
                        "Consulta de Atendente",
                        JOptionPane.QUESTION_MESSAGE
                );
                cxCpfCli.setText("");//Reflexividade
                cxCpfCli.requestFocus();//Reflexividade
            }
            
        }
        //colocar catch melhores
        catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(
                    null,
                    "O cpf deve ser um nÃºmero inteiro!",
                    "Consulta de Atendente",
                    JOptionPane.ERROR_MESSAGE
            );
            cxCpfCli.setText("");//Reflexividade
            cxCpfCli.requestFocus();//Reflexividade
        }
    }
    public void listTab(){
            DefaultTableModel modTab = (DefaultTableModel)tbCadCli.getModel(); //Reflexividade
            int posLin = 0;
            modTab.setRowCount(posLin);

            for(Cliente clit : geCli.getBdCli()){
                modTab.insertRow(posLin, new Object[]{clit.getNome(),
                    clit.getCpf(),
                    clit.getTelefone(),
                });//Reflexividade
                posLin++;
            }
        }
    public void editarCliente(){        
        int posLin = tbCadCli.getSelectedRow(); //Reflexividade       
        
        if(posLin != -1){
            cli1.setCpf(Integer.parseInt(tbCadCli.getModel().getValueAt(posLin, 1).toString()));//Reflexividade
            cli1 = geCli.consCliente(cli1);//Reflexividade
            try{
                //colocar erro caso nÃ£o mude nada
                
                cli1.setNome(cxNomCli.getText());//Reflexividade
                cli1.setTelefone(Integer.parseInt(cxTelefone.getText()));//Reflexividade
                
                cli1 = geCli.consCliente(cli1);//Reflexividade

                if(cli1 != null){
                    FormPrincipal.telaErroInfo("Agendamento Atualizado com sucesso!", "Agendamento Atualizado");//Reflexividade
                }
            }
            catch(NumberFormatException nfe){
                FormPrincipal.telaErroInfo("O Telefone deve ser apenas numeros", "Erro Telefone");//Reflexividade
            }
        }
            
        else{
            FormPrincipal.telaErroInfo("Nenhum cliente da tabela selecionado\nPara editar um Cliente, selecione ele na tabela ",
                    "Editar agendamento");//Reflexividade
        }
    }
    public void selectTab(){        
        int posLin = tbCadCli.getSelectedRow();//Reflexividade
        int resp =  JOptionPane.showConfirmDialog(
                null,
                "Agendamento de codigo:"+tbCadCli.getModel().getValueAt(posLin, 0).toString()+//Reflexividade
                        "Selecionado\nDeseja colocar os dados nas caixas?",
                "Editar Agendamento",
                JOptionPane.YES_NO_OPTION
        );//Reflexividade
       if(resp == 0){
      
            cxNomCli.setText(tbCadCli.getModel().getValueAt(posLin, 0).toString());//Reflexividade
            cxCpfCli.setText(tbCadCli.getModel().getValueAt(posLin, 1).toString());//Reflexividade
            cxTelefone.setText(tbCadCli.getModel().getValueAt(posLin, 2).toString());//Reflexividade
            FormPrincipal.telaErroInfo("InformaÃ§oes colocada na caixa\nPara editar, clique no botao editar", "Editar info");//Reflexividade
       }
        
    }
        public void sair(){
       
                FormPrincipal.telaErroAcao("Deseja realmente sair?", "Saida", this::dispose, 
                () -> FormPrincipal.telaErroAcao("Deseja apagar os dados?", "Dados", this::limpar, null));//Reflexividade
        
    }
    public void inseCliente(){
        cli1 = new Cliente();
        
        try{
            cli1.setCpf(Integer.parseInt(cxCpfCli.getText()));//Reflexividade
            cli1.setNome(cxNomCli.getText());//Reflexividade
            cli1.setTelefone(Integer.parseInt(cxTelefone.getText()));//Reflexividade
            
            cli1 = geCli.insCliente(cli1);//Reflexividade
            
            if(cli1 != null){
                FormPrincipal.telaErroAcao("Cliente cadastrado com sucesso!\nDeseja cadastrar outro?",
                        "Cliente cadastrado", this::limpar, this::dispose);//Reflexividade
            }
        }
        catch(NumberFormatException nfe){
            FormPrincipal.telaErroInfo("Cpf e telefone devem ser apenas numero", "erro nfe");//Reflexividade
        }
        
    }
    public void limpar(){
        cxCpfCli.setText("");//Reflexividade
        cxNomCli.setText("");//Reflexividade
        cxTelefone.setText("");//Reflexividade
        cxNomCli.requestFocus();//Reflexividade
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new CadCliente().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizTab;
    private javax.swing.JButton btCadastrar;
    private javax.swing.JButton btCpf;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btPesquisarCpf;
    private javax.swing.JButton btSair;
    private javax.swing.JTextField cxCpfCli;
    private javax.swing.JTextField cxNomCli;
    private javax.swing.JTextField cxTelefone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCadCli;
    private javax.swing.JLabel lbCpfCli;
    private javax.swing.JLabel lbNomeCli;
    private javax.swing.JLabel lbTelefone;
    private javax.swing.JTable tbCadCli;
    // End of variables declaration//GEN-END:variables
}
